# TODO: implement source control framework
# Source Control - access to source control information from within actions
#   scm :svn
# or
#   scm :git
#
# Configuring one of these, enables you to use source control
# information inside actions:
# action :name do
#   args.branch = source.branch
#   args.version = source.revision
# end

project :myproject do
  plan :push do
    # Encryption allows you to share artifact files on public data stores.
    #
    # encryption is turned off by default
    #   encrypt false
    # to enable encryption you must supply a keyfile
    #   encrypt true, :key => "/path/to/keyfile"
    # or supply a key directly
    #   encrypt true, :key => "this is the key"

    # Command output is disabled by default
    #   output false
    # setting this to true, will display output
    # from all commands that are run as part
    # of the plan
    #   output true

    # Arguments are captured from the command line
    # in key:value pairs.
    #
    # By specifying the following:
    #   argument :name
    # You will then have access to args.name within your plan's actions
    #
    # Argument options
    #   :default      set the default value for the argument
    #   :convert      convert the value received from the command line (see below)
    #   :required     raise an error if this argument is not specified
    #
    # Convert Option:
    #   :convert => :boolean
    #   :convert => :to_s
    #   :convert => :to_i
    # Boolean is a custom conversion, all others are delegated to the string class
    #

    # Actions
    # Actions are executed in order that they are defined in.
    #
    # Generally you will use action wrappers (like: build and push)
    #
    # The build action is a specialized action that *requires*
    # the return value of the block to be the list of files to add
    # to the artifact.
    #
    # build do |attr|
    #   # run build commands
    #   ["target/something.war"]
    # end
    #
    # By default, the build action will also configure the 'pack' action
    # (which handles creating the final combined artifact) and the 'encrypt'
    # action, if encryption is enabled.
    #
    # The 'push' action is a shortcut to Publish the artifact to a data store.
    #   push :publisher
    # Volley includes the Amazon S3 publisher.
    #   push :amazons3
    #
    # You also have the ability to add actions directly:
    #
    # action :name do
    #   # do something
    # end

    build do |attr|
      clean    = args.clean ? "clean" : ""

      # to run commands inside of actions, use the shellout method
      # this is a wrapper around Mixlib::Shellout
      shellout("rake #{clean} build")

      # the 'name' argument is generally set to the branch name.
      # by using the ||= operator here, we can also set the 'name' argument on the command line.
      args.name    ||= source.branch
      # the 'version' argument is generally set to the source control revision number.
      # by using the ||= operator here, we can also set the 'name' argument on the command line.
      args.version ||= source.revision

      final = "target/awesome.war"
      [final]
    end

    push :amazons3
  end

  plan :deploy do
    pull :amazons3
  end
end
